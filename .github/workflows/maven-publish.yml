# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
 
name: Maven Package

on:
  push:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_S3_BUCKET: "artifacts-bucket-123453"
  ARTIFACT_NAME: "hello-world.jar"
  AWS_EB_APP_NAME: "java-maven"
  AWS_EB_APP_VERSION: "${BUILD_ID}"
  AWS_EB_ENVIRONMENT: "javamaven-env"
  SONAR_IP: "52.23.193.18"
  SONAR_TOKEN: "sqp_7e2299be211607c31229ee95e5d10ed188331697"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Publish artifacts to S3 Bucket
      run: |
        aws configure set region us-east-1
        aws s3 cp ./target/**.jar s3://$AWS_S3_BUCKET/$ARTIFACT_NAME
    - name: Check if Environment Exists
      run: |
        exists=$(aws elasticbeanstalk describe-environments --environment-names $AWS_EB_ENVIRONMENT --query "Environments[0].EnvironmentName" --output text)
        if [ -n "$exists" ]; then
          echo "Environment $AWS_EB_ENVIRONMENT exists."
          env_exists=true
        else
          echo "Environment $AWS_EB_ENVIRONMENT does not exist."
          env_exists=false
        fi
    - name: Destroy previous Elastic Beanstalk
      run: |
        aws elasticbeanstalk delete-application-version --application-name $AWS_EB_APP_NAME --version-label $AWS_EB_APP_VERSION
        aws elasticbeanstalk terminate-environment --environment-name $AWS_EB_ENVIRONMENT
    - name: Deploy to Elastic Beanstalk
      run: |
        aws elasticbeanstalk create-application-version --application-name $AWS_EB_APP_NAME --version-label $AWS_EB_APP_VERSION --source-bundle S3Bucket=$AWS_S3_BUCKET,S3Key=$ARTIFACT_NAME
        aws elasticbeanstalk update-environment --application-name $AWS_EB_APP_NAME --environment-name $AWS_EB_ENVIRONMENT --version-label $AWS_EB_APP_VERSION
        
